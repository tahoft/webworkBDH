##DESCRIPTION
##  Numerical methods for differential equations.
##ENDDESCRIPTION

##KEYWORDS('differential equations', 'first order differential equations', 'numerical methods', 'Improved Euler's method')

## DBsubject(Differential equations)
## DBchapter(Numerical methods)
## DBsection(Improving Euler's method.)
## Date('11/18/2022')
## Author('Thomas Hoft')
## Institution('University of St. Thomas')
## TitleText1('Differential Equations')
## EditionText1('4')
## AuthorText1('Blanchard, Devaney, Hall')
## Section1('7.2')
## Problem1('2')


########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGtikz.pl",
   "PGML.pl",
   #"source.pl",        # allows code to be displayed on certain sites.
   #"PGcourse.pl",      # Customization file for the course
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
#$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Numeric");
Context()->variables->add(t=>"Real");

$t_end = 1;
$n = 8;

@def_val_y = (0, 1.2); # default vertical range of graph

$del_t = ($t_end-0)/$n;
foreach my $i (0..$n) { $tn[$i] = $i * $del_t; }

$y_imp = List(1.00000000, 0.897460938, 0.829308417, 0.787887097, 0.767945413, 0.765609334, 0.777810997, 0.801966868, 0.835802777);

@y_eul = (1.00000000, 0.875000000, 0.794921875, 0.747184277, 0.724273734, 0.721202179, 0.734310606, 0.760659098, 0.797708815);

$N = 9; # number of entries, zero-indexed, including y_0 and y_n

$im_y = createTikZImage();
$im_y->tikzLibraries("datavisualization, plotmarks");
$im_y->tikzOptions("scale=2");

$tikz_str_y = "scientific axes, all axes={grid, ticks=many},
             x axis={label=\(t\),}, 
             y axis={label=\(y\)}, 
             visualize as line=pts, 
                pts={style={mark=*}, label in legend={text={\(y_n\) (Improved Euler)}}},
             visualize as line=eul, 
                eul={style={mark=diamond, color=gray}, label in legend={text={\(y_n\) (Euler's)}}},
             legend={north east outside},
             legend entry options/default label in legend path/.style=
                straight label in legend line,";
                
# to get link to numerical methods widget to open in new tab
HEADER_TEXT(<<EOF);
  <script type="text/javascript" language="javascript">
  <!-- //
  function windowpopup() {
    var url = "https://universityofsaintthomas.github.io/hoftweb/sage/numerMethFirstOrderODE.html";
    var opt = "_blank";
    window.open(url,opt).focus();
  }
  // -->
  </script>
EOF

##############################################################
#
#  Text
#
#
Context()->texStrings;
$showPartialCorrectAnswers = 1;
$refreshCachedImages=1;

BEGIN_PGML
Consider the initial-value problem 
[``` \frac{dy}{dt} = t-y^2, \quad y(0) = 1, ```]

which is a non-linear equation (but not separable) for which we do not know a solution method.

Use Improved Euler's method with [`n = [$n]`] steps to approximate the solution to the initial-value problem over the time interval [`0 \le t \le [$t_end]`].
[% (your answers should to be correct to [`\pm 0.0001\%`]) %]

You can use 
[@ htmlLink("javascript:windowpopup();","this online numerical method widget") @]* 
(opens in new tab).

    [`y_0, y_1, y_2, \dots , y_n = `] [____________________________________]

    (enter as a comma-separated list)

END_PGML

#ANS( $y_imp->cmp(tolType => 'relative', tolerance => .0001) );
ANS( $y_imp->cmp );

# pull student entries 
$ans_hash_yn = $y_imp->cmp()->evaluate( $inputs_ref->{ANS_NUM_TO_NAME(1)} );
@a_yk = split(',', $ans_hash_yn->{original_student_ans}); 

# convert student entries to tikZ
$pts_str_y = ""; # initialize data string
foreach my $i (0..$n) { # if ans exists, tack on to string
    if ($a_yk[$i]) {$pts_str_y .= "$tn[$i],$a_yk[$i]
                                  ";}  # *WITH* EXPLICIT CARRIAGE RETURN FOR TIKZ
    }
$eul_str_y = ""; # initialize data string
foreach my $i (0..$n) { # make string for Euler 
    $eul_str_y .= "$tn[$i],$y_eul[$i]
                  ";  # *WITH* EXPLICIT CARRIAGE RETURN FOR TIKZ
    }

$im_y->BEGIN_TIKZ
\datavisualization [$tikz_str_y]
    data [set=pts, headline={x, y}] { $pts_str_y } % student input
    data [set=eul, headline={x, y}] { $eul_str_y } % Euler values
    data [set=def, headline={x, y}] { % this just sets the axes vertical range
        $n[ 0], $def_val_y[0]
        $n[$N], $def_val_y[1]
    };
END_TIKZ

BEGIN_PGML
[@ image( insertGraph($im_y), width=>800,tex_size=>800 ) @]*

(click on the graph to embiggen)
END_PGML

Context()->normalStrings;

##############################################################
#
#  Answers
#
#

ENDDOCUMENT();        
