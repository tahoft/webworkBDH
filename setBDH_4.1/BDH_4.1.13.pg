##DESCRIPTION
##  Forced second-order equations.
##ENDDESCRIPTION

##KEYWORDS('differential equations', 'second order differential equations', 'forced differential equations')

## DBsubject(Differential equations)
## DBchapter(Forcing and resonance)
## DBsection(Forced harmonic oscillators)
## Date('10/23/2022')
## Author('Thomas Hoft')
## Institution('University of St. Thomas')
## TitleText1('Differential Equations')
## EditionText1('4')
## AuthorText1('Blanchard, Devaney, Hall')
## Section1('4.1')
## Problem1('13')


########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   #"source.pl",        # allows code to be displayed on certain sites.
   #"PGcourse.pl",      # Customization file for the course
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
#$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Numeric");
Context()->variables->add(t=>"Real");
Context()->variables->add(k1=>"Real", k2=>"Real");
$y1 = Compute("e^(-t)");
$y2 = Compute("e^(-3t)");
$yp = Compute("4/5 e^(-t/2)");
$y_gen = Compute("k1 $y1 + k2 $y2 + $yp");
$const_1 = Real(-1); # k1
$const_2 = Real(1/5); # k2
$y_spec = $y_gen->substitute(k1=>$const_1, k2=>$const_2); 

##############################################################
#
#  Text
#
#
Context()->texStrings;

BEGIN_TEXT

Consider the differential equation
\[ \frac{d^2y}{dt^2} + 4 \frac{dy}{dt} + 3 y = e^{-t/2}. \]

$PAR (a) Compute the general solution.
$PAR \(\quad\) \(y(t) = \) \{ans_rule(40)\}
$PAR \(\quad\) Use "k1" and "k2" for the constants in your solution.

$PAR (b) Compute the solution with \(y(0)=y'(0)=0\).
$PAR \(\quad\) \(y(t) = \) \{ans_rule(40)\}

END_TEXT
Context()->normalStrings;

##############################################################
#
#  Answers
#
#
$showPartialCorrectAnswers = 1;

sub mycheck {
  my ($correct, $student, $ansHash) = @_;
  if ( $student->usesOneOf("k1") && # uses constant k1
       $student->usesOneOf("k2") && # uses constant k2
       ( ($student->substitute(k1=>1, k2=>0) == $y1 + $yp) || # one of terms is y1
         ($student->substitute(k1=>0, k2=>1) == $y1 + $yp) ) && 
       ( ($student->substitute(k1=>1, k2=>0) == $y2 + $yp) || # one of terms is y2
         ($student->substitute(k1=>0, k2=>1) == $y2 + $yp) ) && 
       $student->substitute(k1=>0, k2=>0) == $yp # probably redundant w/above...
     ) 
  { return 1; } else { return 0; } 
}
ANS($y_gen->cmp(checker=>~~&mycheck));

ANS($y_spec->cmp);

ENDDOCUMENT();        
